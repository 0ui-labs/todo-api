#!/usr/bin/env python3
"""
Task Analysis Hook for Claude Code
Instructs Claude to perform AI-powered analysis before executing any task.
"""

import sys


def main():
    """Main entry point"""
    import json

    # Read JSON input from stdin
    try:
        input_data = sys.stdin.read()
        if input_data:
            data = json.loads(input_data)
            # Extract the user prompt from the JSON
            task = data.get('user_prompt', '')
        else:
            task = ""
    except:
        # Fallback for command line testing
        if len(sys.argv) > 1:
            task = " ".join(sys.argv[1:])
        else:
            task = ""

    if not task:
        return

    # Print mandatory instructions for Claude
    print("üö® MANDATORY PRE-TASK ANALYSIS REQUIRED üö®")
    print("=" * 80)
    print()
    print("‚ö†Ô∏è  IMPORTANT: You MUST complete ALL steps below BEFORE starting the task!")
    print()
    print(f"üìã USER TASK: {task}")
    print()
    print("üìå REQUIRED ANALYSIS STEPS:")
    print("-" * 40)
    print()
    print("1Ô∏è‚É£  ANALYZE the task using your AI capabilities to identify:")
    print("   ‚Ä¢ What technologies/frameworks are mentioned or implied")
    print("   ‚Ä¢ What type of task this is (implementation, planning, debugging, etc.)")
    print("   ‚Ä¢ What documentation will be needed")
    print()
    print("2Ô∏è‚É£  LIST AND JUSTIFY your documentation needs:")
    print("   Create a detailed list with reasoning:")
    print()
    print("   üìã REQUIRED DOCUMENTATION:")
    print("   ‚îú‚îÄ Technology Docs:")
    print("   ‚îÇ  ‚Ä¢ [Tech Name] - REASON: Why this is needed for the task")
    print("   ‚îÇ  ‚Ä¢ [Tech Name] - REASON: Specific aspect needed (e.g., 'authentication flow')")
    print("   ‚îÇ")
    print("   ‚îú‚îÄ Project Guides:")
    print("   ‚îÇ  ‚Ä¢ PYTHON-GUIDE.md - REASON: [Why needed] OR 'NOT NEEDED: [Why not]'")
    print("   ‚îÇ  ‚Ä¢ PRP-FRAMEWORK.md - REASON: [Why needed] OR 'NOT NEEDED: [Why not]'")
    print("   ‚îÇ")
    print("   ‚îî‚îÄ Additional Context:")
    print("      ‚Ä¢ Memory files - REASON: [Which ones and why]")
    print()
    print("   ‚ö†Ô∏è  You MUST provide clear reasoning for EACH documentation choice!")
    print()
    print("3Ô∏è‚É£  THINK about implicit requirements:")
    print("   ‚Ä¢ 'user registration' ‚Üí needs authentication (JWT, Pydantic)")
    print("   ‚Ä¢ 'API endpoint' ‚Üí needs FastAPI documentation")
    print("   ‚Ä¢ 'database' ‚Üí needs SQLAlchemy, PostgreSQL docs")
    print("   ‚Ä¢ 'caching' ‚Üí needs Redis documentation")
    print()
    print("4Ô∏è‚É£  LOAD Context7 documentation for EACH identified technology:")
    print("   a) First use mcp__context7__resolve-library-id to find the correct library")
    print("   b) Then use mcp__context7__get-library-docs with specific topic/tokens parameters")
    print()
    print("   Examples:")
    print("   ‚Ä¢ FastAPI: resolve-library-id('fastapi') ‚Üí get-library-docs with topic='endpoints'")
    print("   ‚Ä¢ SQLAlchemy: resolve-library-id('sqlalchemy') ‚Üí get-library-docs with topic='orm'")
    print("   ‚Ä¢ Pydantic: resolve-library-id('pydantic') ‚Üí get-library-docs with topic='validation'")
    print("   ‚Ä¢ JWT: resolve-library-id('python-jose') ‚Üí get-library-docs with topic='authentication'")
    print()
    print("   ‚ö†Ô∏è  IMPORTANT: Always specify 'topic' parameter to load only relevant sections!")
    print("   ‚ö†Ô∏è  Use 'tokens' parameter (default 10000) to control documentation size")
    print()
    print("5Ô∏è‚É£  LOAD project guides based on task type:")
    print("   ‚Ä¢ Implementation/coding ‚Üí Read docs/PYTHON-GUIDE.md")
    print("   ‚Ä¢ Planning/design ‚Üí Read docs/PRP-FRAMEWORK.md")
    print()
    print("6Ô∏è‚É£  ONLY AFTER completing steps 1-5, proceed with the actual task")
    print()
    print("-" * 80)
    print()
    print("üí° EXAMPLE ANALYSIS:")
    print("Task: 'Implement user registration with email validation'")
    print("‚Üí Technologies: FastAPI (API), JWT (auth), Pydantic (validation), SQLAlchemy (DB)")
    print("‚Üí Guides: PYTHON-GUIDE.md (implementation)")
    print("‚Üí Action: Load all 4 Context7 docs + Python guide BEFORE coding")
    print()
    print("=" * 80)
    print("‚è∏Ô∏è  PAUSE NOW and complete the analysis steps above!")
    print("=" * 80)

if __name__ == "__main__":
    main()
