version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER_FILE: /run/secrets/db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: ${DATABASE_NAME}
    secrets:
      - db_user
      - db_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$(cat /run/secrets/db_user)"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass-file /run/secrets/redis_password
    secrets:
      - redis_password
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--pass-file", "/run/secrets/redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo-network

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    secrets:
      - db_user
      - db_password
      - redis_password
      - jwt_secret_key
    environment:
      # Non-sensitive environment variables
      APP_NAME: "Todo API"
      ENVIRONMENT: production
      DEBUG: false
      API_V1_STR: "/api/v1"
      DATABASE_ECHO: false
      
      # Database configuration (credentials loaded from secrets at runtime)
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      
      # Redis configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      
      # Security settings
      ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: 60
      
      # CORS settings
      BACKEND_CORS_ORIGINS: ${BACKEND_CORS_ORIGINS}
      
      # Rate limiting (all non-sensitive configs)
      RATE_LIMIT_ENABLED: true
      RATE_LIMIT_STRATEGY: moving-window
      RATE_LIMIT_BURST_SIZE: 10
      RATE_LIMIT_BURST_REFILL_RATE: 1
      RATE_LIMIT_BURST_REFILL_PERIOD: 1
      
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - todo-network
    # Override entrypoint to load secrets into environment variables
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "export DATABASE_USER=$$(cat /run/secrets/db_user) && \
       export DATABASE_PASSWORD=$$(cat /run/secrets/db_password) && \
       export REDIS_PASSWORD=$$(cat /run/secrets/redis_password) && \
       export SECRET_KEY=$$(cat /run/secrets/jwt_secret_key) && \
       export DATABASE_URL=postgresql+asyncpg://$$DATABASE_USER:$$DATABASE_PASSWORD@db:5432/$$DATABASE_NAME && \
       export REDIS_URL=redis://:$$REDIS_PASSWORD@redis:6379/0 && \
       exec uvicorn app.main:app --host 0.0.0.0 --port 8000"

volumes:
  postgres_data:
  redis_data:

networks:
  todo-network:
    driver: bridge

secrets:
  db_user:
    file: ./secrets/db_user.txt
  db_password:
    file: ./secrets/db_password.txt
  redis_password:
    file: ./secrets/redis_password.txt
  jwt_secret_key:
    file: ./secrets/jwt_secret_key.txt